variables:
  buildConfiguration: 'Release'
  outputDir: '$(Build.ArtifactStagingDirectory)/drop'
  androidSdkVersion: '35'
  androidHome: '$(Agent.ToolsDirectory)/android-sdk'
  javaHome: 'C:\Java\OpenJDK11'

trigger:
  branches:
    include:
      - main
      - master
      - feature/*
      - release/*

pool:
  vmImage: 'windows-latest'

stages:
- stage: Build
  jobs:
  - job: Build_MAUI_Android
    pool:
      vmImage: 'windows-latest'
    steps:
    - checkout: self
      fetchDepth: 0

    - script: |
        dotnet new tool-manifest --force
        dotnet tool install GitVersion.Tool --version 6.3.0
        dotnet tool run dotnet-gitversion /output json /verbosity quiet > gitversion.json
      workingDirectory: $(Build.SourcesDirectory)
      displayName: 'Install and Run GitVersion'

    - task: PowerShell@2
      displayName: 'Update Build Number from GitVersion'
      inputs:
        targetType: 'inline'
        script: |
          $gitVersion = Get-Content 'gitversion.json' | ConvertFrom-Json
          if ($gitVersion -and $gitVersion.SemVer) {
              Write-Host "##vso[build.updatebuildnumber]$($gitVersion.SemVer)"
              Write-Host "##vso[task.setvariable variable=GitVersion_SemVer]$($gitVersion.SemVer)"
          }

    - task: UseDotNet@2
      displayName: 'Install .NET SDK 9.x'
      inputs:
        version: '9.x'
        includePreviewVersions: true

    - task: UseDotNet@2
      displayName: 'Install .NET SDK 8.x'
      inputs:
        version: '8.x'
        includePreviewVersions: true

    - task: PowerShell@2
      displayName: 'Install OpenJDK 11 and Set JAVA_HOME'
      inputs:
        targetType: 'inline'
        script: |
          $jdkUrl = "https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.21+9/OpenJDK11U-jdk_x64_windows_hotspot_11.0.21_9.msi"
          $installerPath = "$env:TEMP\openjdk11.msi"
          Invoke-WebRequest -Uri $jdkUrl -OutFile $installerPath
          Start-Process msiexec.exe -Wait -ArgumentList "/i `"$installerPath`" INSTALLDIR=`"$(javaHome)`" /quiet /qn /norestart"
          Write-Host "##vso[task.setvariable variable=JAVA_HOME]$(javaHome)"

    - script: |
        echo "Installing Android SDK components..."
        echo "ANDROID_HOME is set to: %ANDROID_HOME%"
        echo "JAVA_HOME is set to: %JAVA_HOME%"
        echo "Path is set to: %PATH%"

        "%ANDROID_HOME%\cmdline-tools\latest\bin\sdkmanager.bat" --sdk_root="%ANDROID_HOME%" `
          "platform-tools" `
          "platforms;android-$(androidSdkVersion)" `
          "build-tools;34.0.0" `
          "emulator"
      env:
        ANDROID_HOME: $(ANDROID_HOME)
        JAVA_HOME: $(JAVA_HOME)
        PATH: $(PATH)
      displayName: 'Install Android SDK components'
    - script: |
        "%ANDROID_HOME%\cmdline-tools\latest\bin\sdkmanager.bat" --sdk_root="%ANDROID_HOME%" `
          "platform-tools" `
          "platforms;android-$(androidSdkVersion)" `
          "build-tools;34.0.0" `
          "emulator"
      env:
        ANDROID_HOME: $(ANDROID_HOME)
        JAVA_HOME: $(JAVA_HOME)
        PATH: $(PATH)
      displayName: 'Install Android SDK components'

    - task: DotNetCoreCLI@2
      displayName: 'Restore MAUI Workloads'
      inputs:
        command: 'custom'
        custom: 'workload'
        arguments: 'restore'
      env:
        ANDROID_HOME: $(ANDROID_HOME)
        JAVA_HOME: $(JAVA_HOME)
        PATH: $(PATH)

    - task: DotNetCoreCLI@2
      displayName: 'Install MAUI Workloads'
      inputs:
        command: 'custom'
        custom: 'workload'
        arguments: 'install maui maui-android maui-ios maui-windows'
      env:
        ANDROID_HOME: $(ANDROID_HOME)
        JAVA_HOME: $(JAVA_HOME)
        PATH: $(PATH)

    - task: NuGetCommand@2
      displayName: 'Restore NuGet Packages'
      inputs:
        restoreSolution: 'Location.Core.sln'

    - task: DotNetCoreCLI@2
      displayName: 'Build APK'
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '-f net8.0-android /p:Configuration=$(buildConfiguration) /p:OutputPath=$(outputDir)-apk'
      env:
        ANDROID_HOME: $(ANDROID_HOME)
        JAVA_HOME: $(JAVA_HOME)
        PATH: $(PATH)

    - task: DotNetCoreCLI@2
      displayName: 'Build AAB'
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '-f net8.0-android /p:Configuration=$(buildConfiguration) /p:OutputPath=$(outputDir)-aab /p:AndroidPackageFormat=aab'
      env:
        ANDROID_HOME: $(ANDROID_HOME)
        JAVA_HOME: $(JAVA_HOME)
        PATH: $(PATH)

    - script: |
        echo "Pushing APK to Azure Artifacts Feed (apks)..."
        az artifacts universal publish --organization https://dev.azure.com/$(organization) --feed $(apksFeed) --package-name location-core-apk --package-version $(GitVersion_SemVer) --path $(outputDir)-apk
      displayName: 'Push APK to apks Feed'

    - script: |
        echo "Pushing AAB to Azure Artifacts Feed (aab)..."
        az artifacts universal publish --organization https://dev.azure.com/$(organization) --feed $(aabsFeed) --package-name location-core-aab --package-version $(GitVersion_SemVer) --path $(outputDir)-aab
      displayName: 'Push AAB to aabs Feed'
