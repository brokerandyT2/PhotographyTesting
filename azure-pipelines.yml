trigger:
  branches:
    include:
      - main
      - master
      - feature/*
      - release/*

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  outputDir: '$(Build.ArtifactStagingDirectory)/drop'
  androidSdkVersion: '35'
  androidHome: '$(Agent.ToolsDirectory)/android-sdk'
  javaHome: 'C:\Java\OpenJDK11'

stages:
- stage: Build
  jobs:
  - job: Build_MAUI_Android
    pool:
      vmImage: 'windows-latest'

    steps:
    - checkout: self
      fetchDepth: 0

    - script: |
        echo "Current directory: %CD%"
        dir
        dotnet new tool-manifest --force
        dotnet tool install GitVersion.Tool --version 6.3.0
        dotnet tool list
        dotnet tool run dotnet-gitversion /output json /verbosity quiet > gitversion.json 2> gitversion.log
        type gitversion.json
        type gitversion.log
      workingDirectory: $(Build.SourcesDirectory)
      displayName: 'Install and Run GitVersion'

    - task: PowerShell@2
      displayName: 'Update Build Number from GitVersion'
      inputs:
        targetType: 'inline'
        script: |
          $gitVersion = Get-Content 'gitversion.json' | ConvertFrom-Json
          if ($gitVersion -and $gitVersion.SemVer) {
              $semver = $gitVersion.SemVer
              Write-Host "##vso[build.updatebuildnumber]$semver"
              Write-Host "##vso[task.setvariable variable=GitVersion_SemVer]$semver"
          } else {
              Write-Host "GitVersion output is invalid or missing."
          }

    - task: UseDotNet@2
      displayName: 'Install .NET SDK 9.x'
      inputs:
        version: '9.x'
        includePreviewVersions: true

    - task: PowerShell@2
      displayName: 'Install OpenJDK 11 and Set JAVA_HOME'
      inputs:
        targetType: 'inline'
        script: |
          $jdkVersion = "11"
          $installerUrl = "https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.21+9/OpenJDK11U-jdk_x64_windows_hotspot_11.0.21_9.msi"
          $installerPath = "$env:Temp\openjdk.msi"
          $installDir = "$(javaHome)"

          Invoke-WebRequest -Uri $installerUrl -OutFile $installerPath
          Start-Process msiexec.exe -Wait -ArgumentList "/i `"$installerPath`" INSTALLDIR=`"$installDir`" /quiet /qn /norestart"

          Write-Host "##vso[task.setvariable variable=JAVA_HOME]$installDir"

    - task: PowerShell@2
      displayName: 'Download and Set Up Android SDK Command-Line Tools'
      inputs:
        targetType: 'inline'
        script: |
          $sdkRoot = "$(androidHome)"
          $toolsUrl = "https://dl.google.com/android/repository/commandlinetools-win-9477386_latest.zip"
          $zipPath = "$sdkRoot\cmdline-tools.zip"
          $extractTemp = "$sdkRoot\temp"
          $finalToolsDir = "$sdkRoot\cmdline-tools\latest"

          New-Item -ItemType Directory -Force -Path $sdkRoot | Out-Null
          Invoke-WebRequest -Uri $toolsUrl -OutFile $zipPath
          Expand-Archive -Path $zipPath -DestinationPath $extractTemp -Force
          New-Item -ItemType Directory -Force -Path $finalToolsDir | Out-Null
          Copy-Item "$extractTemp\cmdline-tools\*" -Destination $finalToolsDir -Recurse -Force
          Remove-Item $extractTemp -Recurse -Force
          Remove-Item $zipPath -Force

          Write-Host "##vso[task.setvariable variable=ANDROID_HOME]$sdkRoot"
          Write-Host "##vso[task.setvariable variable=PATH]$sdkRoot\platform-tools;$sdkRoot\cmdline-tools\latest\bin;$env:PATH"

    - script: |
        "%ANDROID_HOME%\cmdline-tools\latest\bin\sdkmanager.bat" --sdk_root="%ANDROID_HOME%" "platform-tools" "platforms;android-$(androidSdkVersion)" "build-tools;34.0.0" "emulator"
      env:
        ANDROID_HOME: $(ANDROID_HOME)
        JAVA_HOME: $(JAVA_HOME)
        PATH: $(PATH)
      displayName: 'Install Android SDK components'

    - task: DotNetCoreCLI@2
      displayName: 'Restore Workloads'
      inputs:
        command: 'custom'
        custom: 'workload'
        arguments: 'restore'
      env:
        ANDROID_HOME: $(ANDROID_HOME)
        JAVA_HOME: $(JAVA_HOME)
        PATH: $(PATH)

    - task: DotNetCoreCLI@2
      displayName: 'Install MAUI Workloads'
      inputs:
        command: 'custom'
        custom: 'workload'
        arguments: 'install maui maui-android maui-ios maui-windows'
      env:
        ANDROID_HOME: $(ANDROID_HOME)
        JAVA_HOME: $(JAVA_HOME)
        PATH: $(PATH)

    - task: NuGetCommand@2
      displayName: 'Restore NuGet Packages'
      inputs:
        restoreSolution: 'Location.Core.sln'

    - task: VSBuild@1
      displayName: 'Build Photography.sln with MSBuild (for tests)'
      inputs:
        solution: 'Photography.sln'
        msbuildArchitecture: 'x64'
        platform: 'Any CPU'
        configuration: '$(buildConfiguration)'
        vsVersion: 'latest'
        msbuildArgs: '/restore /p:UseDotNetNativeToolchain=false'
      env:
        ANDROID_HOME: $(ANDROID_HOME)
        JAVA_HOME: $(JAVA_HOME)
        PATH: $(PATH)

    - task: DotNetCoreCLI@2
      displayName: 'Run Unit Tests'
      inputs:
        command: 'test'
        projects: '**/*Tests.csproj'
        arguments: '--configuration $(buildConfiguration)'
      continueOnError: true
      env:
        ANDROID_HOME: $(ANDROID_HOME)
        JAVA_HOME: $(JAVA_HOME)
        PATH: $(PATH)

    - script: |
        dotnet publish "Location.Core/Location.Core.csproj" -f net9.0-android$(androidSdkVersion).0 -c $(buildConfiguration) -o $(outputDir) -p:AndroidPackageFormat=aab
      displayName: 'Publish Android AAB (App Bundle)'
      env:
        ANDROID_HOME: $(ANDROID_HOME)
        JAVA_HOME: $(JAVA_HOME)
        PATH: $(PATH)

    - task: PublishBuildArtifacts@1
      displayName: 'Upload AAB Artifact'
      inputs:
        PathtoPublish: '$(outputDir)'
        ArtifactName: 'android-aab'

    - script: |
        dotnet publish "Location.Core/Location.Core.csproj" -f net9.0-android$(androidSdkVersion).0 -c $(buildConfiguration) -o $(outputDir)-apk -p:AndroidPackageFormat=apk
      displayName: 'Publish Android APK'
      env:
        ANDROID_HOME: $(ANDROID_HOME)
        JAVA_HOME: $(JAVA_HOME)
        PATH: $(PATH)

    - task: PublishBuildArtifacts@1
      displayName: 'Upload APK Artifact'
      inputs:
        PathtoPublish: '$(outputDir)-apk'
        ArtifactName: 'android-apk'
