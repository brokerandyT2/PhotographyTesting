trigger:
  branches:
    include:
      - main
      - master
      - feature/*
      - release/*

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  outputDir: '$(Build.ArtifactStagingDirectory)/drop'
  androidSdkVersion: '35'
  androidHome: '$(Agent.ToolsDirectory)/android-sdk'

stages:
- stage: Build
  jobs:
  - job: Build_MAUI_Android
    pool:
      vmImage: 'windows-latest'

    steps:
    - checkout: self
      fetchDepth: 0

    - task: UseDotNet@2
      displayName: 'Install .NET SDK 9.x'
      inputs:
        version: '9.x'
        includePreviewVersions: true

    - task: PowerShell@2
      displayName: 'Install OpenJDK 11 and Set JAVA_HOME'
      inputs:
        targetType: 'inline'
        script: |
          $jdkVersion = "11"
          $installerUrl = "https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.21+9/OpenJDK11U-jdk_x64_windows_hotspot_11.0.21_9.msi"
          $installerPath = "$env:Temp\openjdk.msi"
          $installDir = "C:\Java\OpenJDK$jdkVersion"

          Invoke-WebRequest -Uri $installerUrl -OutFile $installerPath
          Start-Process msiexec.exe -Wait -ArgumentList "/i `"$installerPath`" INSTALLDIR=`"$installDir`" /quiet /qn /norestart"

          [System.Environment]::SetEnvironmentVariable("JAVA_HOME", $installDir, [System.EnvironmentVariableTarget]::Process)
          $env:JAVA_HOME = $installDir
          $env:Path += ";$installDir\bin"

    - task: PowerShell@2
      displayName: 'Download and Set Up Android SDK Command-Line Tools'
      inputs:
        targetType: 'inline'
        script: |
          $sdkRoot = "$(androidHome)"
          $toolsUrl = "https://dl.google.com/android/repository/commandlinetools-win-9477386_latest.zip"
          $zipPath = "$sdkRoot\cmdline-tools.zip"
          $extractTemp = "$sdkRoot\temp"
          $finalToolsDir = "$sdkRoot\cmdline-tools\latest"

          New-Item -ItemType Directory -Force -Path $sdkRoot | Out-Null
          Invoke-WebRequest -Uri $toolsUrl -OutFile $zipPath
          Expand-Archive -Path $zipPath -DestinationPath $extractTemp -Force
          New-Item -ItemType Directory -Force -Path $finalToolsDir | Out-Null
          Copy-Item "$extractTemp\cmdline-tools\*" -Destination $finalToolsDir -Recurse -Force
          Remove-Item $extractTemp -Recurse -Force
          Remove-Item $zipPath -Force
      env:
        ANDROID_HOME: $(androidHome)

    - script: |
        "%ANDROID_HOME%\cmdline-tools\latest\bin\sdkmanager.bat" --sdk_root="%ANDROID_HOME%" "platform-tools" "platforms;android-$(androidSdkVersion)" "build-tools;34.0.0" "emulator"
      env:
        ANDROID_HOME: $(androidHome)
        JAVA_HOME: C:\Java\OpenJDK11
      displayName: 'Install Android SDK components'

    - script: |
        echo "##vso[task.setvariable variable=ANDROID_HOME]$(androidHome)"
        echo "##vso[task.setvariable variable=JAVA_HOME]C:\Java\OpenJDK11"
        echo "##vso[task.setvariable variable=PATH]$(androidHome)\platform-tools;$(androidHome)\cmdline-tools\latest\bin;$(PATH)"
      displayName: 'Set Env Vars'

    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: 'Photography.sln'
      displayName: 'Restore NuGet Packages'

    - task: VSBuild@1
      displayName: 'Build Photography.sln with MSBuild (for tests)'
      inputs:
        solution: 'Photography.sln'
        msbuildArchitecture: 'x64'
        platform: 'Any CPU'
        configuration: '$(buildConfiguration)'
        vsVersion: 'latest'
        msbuildArgs: '/restore /p:UseDotNetNativeToolchain=false'

    - script: |
        dotnet workload install maui maui-android
      displayName: 'Install .NET MAUI Workloads'

    - script: |
        dotnet publish "Locations.Photography.Mobile/Locations.Photography.Mobile.csproj" -f net9.0-android$(androidSdkVersion).0 -c $(buildConfiguration) -o $(outputDir) -p:AndroidPackageFormat=aab
      displayName: 'Publish Android AAB (App Bundle)'

    - task: PublishBuildArtifacts@1
      displayName: 'Upload AAB Artifact'
      inputs:
        PathtoPublish: '$(outputDir)'
        ArtifactName: 'android-aab'

    - script: |
        dotnet publish "Locations.Photography.Mobile/Locations.Photography.Mobile.csproj" -f net9.0-android$(androidSdkVersion).0 -c $(buildConfiguration) -o $(outputDir)-apk -p:AndroidPackageFormat=apk
      displayName: 'Publish Android APK'

    - task: PublishBuildArtifacts@1
      displayName: 'Upload APK Artifact'
      inputs:
        PathtoPublish: '$(outputDir)-apk'
        ArtifactName: 'android-apk'
