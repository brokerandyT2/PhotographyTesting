trigger:
  branches:
    include:
      - main
      - master
      - feature/*
      - release/*
  tags:
    include:
      - '*'

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  outputDir: '$(Build.ArtifactStagingDirectory)/drop'
  CI: true

stages:
- stage: Build
  jobs:
  - job: Build_MAUI
    pool:
      vmImage: 'windows-latest'

    steps:
    - checkout: self
      fetchDepth: 0
      persistCredentials: true

    - script: |
        git fetch --tags --force --prune
        git tag
      displayName: 'Ensure full Git history and tags are available'

    - script: |
        dotnet new tool-manifest --force
        dotnet tool install GitVersion.Tool --version 6.3.0
        dotnet tool run dotnet-gitversion /output buildserver /verbosity quiet
      displayName: 'Install and Run GitVersion'

    - task: PowerShell@2
      displayName: 'Confirm GitVersion Output'
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "GitVersion_SemVer: $(GitVersion_SemVer)"
          Write-Host "GitVersion_AssemblySemVer: $(GitVersion_AssemblySemVer)"
          Write-Host "GitVersion_AssemblySemFileVer: $(GitVersion_AssemblySemFileVer)"
          Write-Host "GitVersion_InformationalVersion: $(GitVersion_InformationalVersion)"

    - task: UseDotNet@2
      displayName: 'Install .NET SDK 9.x'
      inputs:
        version: '9.x'
        includePreviewVersions: true

    - script: |
        dotnet workload restore
      displayName: 'Restore Workloads'

    - script: |
        dotnet workload install maui-ios maccatalyst
      displayName: 'Install MAUI iOS Workload'

    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        command: 'restore'
        restoreSolution: '**/*.sln'
        feedsToUse: 'select'

    - task: VSBuild@1
      displayName: 'Build MAUI Solution'
      inputs:
        solution: 'Photography.sln'
        configuration: '$(buildConfiguration)'
        msbuildArgs: >
          -p:AssemblyVersion=$(GitVersion_AssemblySemVer)
          -p:FileVersion=$(GitVersion_AssemblySemFileVer)
          -p:InformationalVersion=$(GitVersion_InformationalVersion)

    - task: DotNetCoreCLI@2
      displayName: 'Run Tests'
      inputs:
        command: 'test'
        projects: '**/*Tests.csproj'
        arguments: '--configuration Release --no-build'
      continueOnError: true

    - task: DotNetCoreCLI@2
      displayName: 'Publish MAUI App'
      inputs:
        command: publish
        publishWebProjects: false
        projects: '**/Location.Core.csproj'
        arguments: >
          --framework net9.0-android35.0
          --configuration Release
          --output $(outputDir)
          -p:AssemblyVersion=$(GitVersion_AssemblySemVer)
          -p:FileVersion=$(GitVersion_AssemblySemFileVer)
          -p:InformationalVersion=$(GitVersion_InformationalVersion)

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(outputDir)'
        ArtifactName: 'drop'
