trigger:
  branches:
    include:
      - main
      - master
      - feature/*
      - release/*

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  outputDir: '$(Build.ArtifactStagingDirectory)/drop'
  androidSdkVersion: '35'
  androidHome: '$(Agent.ToolsDirectory)/android-sdk'
  javaHome: 'C:\Java\OpenJDK11'

stages:

# ------------------
# Stage: Setup
# ------------------
- stage: Setup
  displayName: 'Setup Environment'
  jobs:
  - job: 'Setup'
    steps:
    - checkout: self
      fetchDepth: 0

    - script: |
        dotnet new tool-manifest --force
        dotnet tool install GitVersion.Tool --version 6.3.0
        dotnet tool run dotnet-gitversion /output json /verbosity quiet > gitversion.json
      displayName: 'Install and Run GitVersion'

    - task: PowerShell@2
      displayName: 'Set GitVersion Build Number'
      inputs:
        targetType: 'inline'
        script: |
          $gitVersion = Get-Content 'gitversion.json' | ConvertFrom-Json
          Write-Host "##vso[build.updatebuildnumber]$($gitVersion.SemVer)"
          Write-Host "##vso[task.setvariable variable=GitVersion_SemVer;isOutput=true]$($gitVersion.SemVer)"

    - task: UseDotNet@2
      displayName: 'Install .NET 9.x SDK'
      inputs:
        version: '9.x'
        includePreviewVersions: true

    - task: PowerShell@2
      displayName: 'Install OpenJDK 11'
      inputs:
        targetType: 'inline'
        script: |
          $jdkUrl = "https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.21+9/OpenJDK11U-jdk_x64_windows_hotspot_11.0.21_9.msi"
          $installerPath = "$env:TEMP\openjdk11.msi"
          Invoke-WebRequest -Uri $jdkUrl -OutFile $installerPath
          Start-Process msiexec.exe -Wait -ArgumentList "/i `"$installerPath`" INSTALLDIR=`"$(javaHome)`" /quiet /qn /norestart"
          Write-Host "##vso[task.setvariable variable=JAVA_HOME]$(javaHome)"

    - task: PowerShell@2
      displayName: 'Install Android SDK'
      inputs:
        targetType: 'inline'
        script: |
          $sdkRoot = "$(androidHome)"
          $toolsUrl = "https://dl.google.com/android/repository/commandlinetools-win-9477386_latest.zip"
          $zipPath = "$sdkRoot\cmdline-tools.zip"
          $extractTemp = "$sdkRoot\temp"
          $finalToolsDir = "$sdkRoot\cmdline-tools\latest"

          New-Item -ItemType Directory -Force -Path $sdkRoot | Out-Null
          Invoke-WebRequest -Uri $toolsUrl -OutFile $zipPath
          Expand-Archive -Path $zipPath -DestinationPath $extractTemp -Force
          New-Item -ItemType Directory -Force -Path $finalToolsDir | Out-Null
          Copy-Item "$extractTemp\cmdline-tools\*" -Destination $finalToolsDir -Recurse -Force
          Remove-Item $extractTemp, $zipPath -Recurse -Force

          Write-Host "##vso[task.setvariable variable=ANDROID_HOME]$sdkRoot"
          Write-Host "##vso[task.setvariable variable=PATH]$sdkRoot\platform-tools;$sdkRoot\cmdline-tools\latest\bin;$env:PATH"

    - script: |
        "%ANDROID_HOME%\cmdline-tools\latest\bin\sdkmanager.bat" --sdk_root="%ANDROID_HOME%" "platform-tools" "platforms;android-$(androidSdkVersion)" "build-tools;34.0.0" "emulator"
      displayName: 'Install Android SDK Components'
      env:
        ANDROID_HOME: $(ANDROID_HOME)
        JAVA_HOME: $(JAVA_HOME)
        PATH: $(PATH)

# ------------------
# Stage: Restore
# ------------------
- stage: Restore
  dependsOn: Setup
  jobs:
  - job: 'Restore_Workloads_and_NUGET_pkgs'
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Restore MAUI Workloads'
      inputs:
        command: 'custom'
        custom: 'workload'
        arguments: 'restore'
      env:
        ANDROID_HOME: $(ANDROID_HOME)
        JAVA_HOME: $(JAVA_HOME)
        PATH: $(PATH)

    - task: DotNetCoreCLI@2
      displayName: 'Install MAUI Workloads'
      inputs:
        command: 'custom'
        custom: 'workload'
        arguments: 'install maui maui-android maui-ios maui-windows'
      env:
        ANDROID_HOME: $(ANDROID_HOME)
        JAVA_HOME: $(JAVA_HOME)
        PATH: $(PATH)

    - task: NuGetCommand@2
      displayName: 'Restore NuGet Packages'
      inputs:
        restoreSolution: 'Photography.sln'

# ------------------
# Stage: Build
# ------------------
- stage: Build
  dependsOn: Restore
  jobs:
  - job: 'Build_APK_and_AAB'
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Build APK'
      inputs:
        command: 'build'
        projects: '**/Location.Core.csproj'
        arguments: '-f net9.0-android /p:Configuration=$(buildConfiguration) /p:OutputPath=$(outputDir)-apk'
      env:
        ANDROID_HOME: $(ANDROID_HOME)
        JAVA_HOME: $(JAVA_HOME)
        PATH: $(PATH)

    - task: DotNetCoreCLI@2
      displayName: 'Build AAB'
      inputs:
        command: 'build'
        projects: '**/Location.Core.csproj'
        arguments: '-f net9.0-android /p:Configuration=$(buildConfiguration) /p:OutputPath=$(outputDir)-aab /p:AndroidPackageFormat=aab'
      env:
        ANDROID_HOME: $(ANDROID_HOME)
        JAVA_HOME: $(JAVA_HOME)
        PATH: $(PATH)

# ------------------
# Stage: Publish
# ------------------
- stage: Publish
  dependsOn: Build
  jobs:
  - job: 'Publish_AAB_and_APK_to_Artifacts'
    steps:
    - script: |
        echo "Publishing APK..."
        az artifacts universal publish --organization "https://dev.azure.com/$(organization)" --feed "$(apksFeed)" --package-name location-core-apk --package-version "$(GitVersion_SemVer)" --path "$(outputDir)-apk"
      displayName: 'Publish APK'

    - script: |
        echo "Publishing AAB..."
        az artifacts universal publish --organization "https://dev.azure.com/$(organization)" --feed "$(aabsFeed)" --package-name location-core-aab --package-version "$(GitVersion_SemVer)" --path "$(outputDir)-aab"
      displayName: 'Publish AAB'
