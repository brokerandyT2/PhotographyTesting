trigger:
  branches:
    include:
      - '*'
  paths:
    include:
      - '**'
    exclude:
      - Platforms/**
      - '!Platforms/Android/**'

pool:
  vmImage: 'windows-latest'

variables:
  BuildConfiguration: 'Release'
  AndroidSdkVersion: '34.0'
  SemanticVersion: '1.0'

steps:
# Step 1: Checkout the full repository
- checkout: self
  clean: true
  fetchDepth: 0

# Step 2: Install .NET SDK
- task: UseDotNet@2
  displayName: 'Install .NET SDK'
  inputs:
    packageType: 'sdk'
    version: '9.x'

# Step 3: Install GitVersion
- script: |
    dotnet new tool-manifest --force
    dotnet tool install GitVersion.Tool --version 6.3.0
    dotnet tool list
  displayName: 'Install GitVersion'

- script: |
    dotnet tool run dotnet-gitversion /output json /verbosity quiet > $(Build.SourcesDirectory)\gitversion.json 2> $(Build.SourcesDirectory)\gitversion-error.log
  displayName: 'Run GitVersion'

# Step 4: Set GitVersion-based Build Number
- task: PowerShell@2
  displayName: 'Set GitVersion-based Build Number'
  inputs:
    targetType: 'inline'
    script: |
      $gitVersion = Get-Content 'gitversion.json' | ConvertFrom-Json
      $baseVersion = $gitVersion.SemVer.Split('-')[0]
      $buildId = "$(Build.BuildId)".Replace('.','')
      $semVerParts = $baseVersion.TrimStart('v').Split('.')
      $major = $semVerParts[0]
      $minor = $semVerParts[1]
      $semVer = ".$major.$minor.$buildId"

      Write-Host "##vso[build.updatebuildnumber]$semVer"
      Write-Host "##vso[task.setvariable variable=SemVer]$semVer"
      Write-Host "##vso[task.setvariable variable=AndroidVersionCode]$buildId"
      Write-Host "##vso[task.setvariable variable=AssemblyVersion]$semVer"

# Step 5: Install .NET MAUI Android Workload
- script: |
    dotnet workload install maui-android
  displayName: 'Install .NET MAUI Android Workload'

# Step 6: Install Android SDK and cmdline-tools
- script: |
    echo "Installing Android SDK..."
    choco install android-sdk -y
    refreshenv

    set ANDROID_SDK_ROOT=C:\Android\android-sdk
    set CMDLINE_TOOLS_DIR=%ANDROID_SDK_ROOT%\cmdline-tools\latest
    mkdir %CMDLINE_TOOLS_DIR%

    echo "Downloading cmdline-tools..."
    curl -o cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-win-11076708_latest.zip
    tar -xf cmdline-tools.zip -C %CMDLINE_TOOLS_DIR% --strip-components=1

    set PATH=%CMDLINE_TOOLS_DIR%\bin;%PATH%
    echo "Installing platform tools and build-tools using sdkmanager..."
    sdkmanager.bat "platform-tools" "platforms;android-$(AndroidSdkVersion)" "build-tools;$(AndroidSdkVersion)" --sdk_root=%ANDROID_SDK_ROOT%
  displayName: 'Install Android SDK and cmdline-tools'

# Step 7: Install JDK
- script: |
    choco install openjdk11 -y
  displayName: 'Install JDK 11'

# Step 8: Restore NuGet packages
- task: NuGetCommand@2
  displayName: 'Restore NuGet Packages'
  inputs:
    command: 'restore'
    restoreSolution: '**/*.sln'

# Step 9: Build APK
- task: MSBuild@1
  displayName: 'Build APK'
  inputs:
    solution: 'Location.Core.csproj'  # Specify the project file
    msbuildArguments: '/p:Configuration=$(BuildConfiguration) /p:AndroidPackageFormat=apk /p:Version=$(AssemblyVersion)'
    configuration: '$(BuildConfiguration)'

# Step 10: Build AAB
- task: MSBuild@1
  displayName: 'Build AAB'
  inputs:
    solution: 'Location.Core.csproj'  # Specify the project file
    msbuildArguments: '/p:Configuration=$(BuildConfiguration) /p:AndroidPackageFormat=aab /p:Version=$(AssemblyVersion)'
    configuration: '$(BuildConfiguration)'

# Step 11: Publish APK to Azure Artifacts
- task: AzureCLI@2
  inputs:
      azureSubscription: '5f0409de-fc38-4662-845c-cd1e61659c18'  # Your Service Connection ID
      scriptType: 'pscore'  # PowerShell Core
      scriptLocation: 'inlineScript'
      inlineScript: |
        az artifacts universal publish --feed apk --name PhotographyLocationsAPK --path $(Build.SourcesDirectory)/bin/$(BuildConfiguration)/net9.0-android/*.apk --version $(AssemblyVersion) --organization https://dev.azure.com/3squaredcircles
  displayName: 'Publish APK to Azure Artifacts'

# Step 12: Publish AAB to Azure Artifacts
- task: AzureCLI@2
  inputs:
      azureSubscription: '5f0409de-fc38-4662-845c-cd1e61659c18'  # Your Service Connection ID
      scriptType: 'pscore'  # PowerShell Core
      scriptLocation: 'inlineScript'
      inlineScript: |
        az artifacts universal publish --feed aab --name PhotographyLocationsAAB --path $(Build.SourcesDirectory)/bin/$(BuildConfiguration)/net9.0-android/*.aab --version $(AssemblyVersion) --organization https://dev.azure.com/3squaredcircles
  displayName: 'Publish AAB to Azure Artifacts'
