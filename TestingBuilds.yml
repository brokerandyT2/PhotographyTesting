trigger:
  branches:
    include:
      - '*'

pool:
  vmImage: 'windows-latest'

variables:
  BuildConfiguration: 'Release'
  AndroidSdkVersion: '34.0'

steps:
# Step 1: Install .NET SDK
- task: UseDotNet@2
  displayName: 'Install .NET SDK'
  inputs:
    packageType: 'sdk'
    version: '9.x'
    
- script: |
    dotnet workload install maui-android
  displayName: 'Install .NET MAUI Android Workload'

# Step 2: Install Android SDK and Command-Line Tools
- script: |
    echo "Installing Android SDK..."
    choco install android-sdk -y
    refreshenv

    set ANDROID_SDK_ROOT=C:\Android\android-sdk
    set CMDLINE_TOOLS_DIR=%ANDROID_SDK_ROOT%\cmdline-tools\latest
    mkdir %CMDLINE_TOOLS_DIR%

    curl -o cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-win-11076708_latest.zip
    tar -xf cmdline-tools.zip -C %CMDLINE_TOOLS_DIR% --strip-components=1

    set PATH=%CMDLINE_TOOLS_DIR%\bin;%PATH%
    sdkmanager.bat "platform-tools" "platforms;android-$(AndroidSdkVersion)" "build-tools;$(AndroidSdkVersion)" --sdk_root=%ANDROID_SDK_ROOT%
  displayName: 'Install Android SDK and cmdline-tools'

# Step 3: Restore NuGet Packages
- task: NuGetCommand@2
  displayName: 'Restore NuGet Packages'
  inputs:
    command: 'restore'
    restoreSolution: '**/Location.Core.csproj'

# Step 4: Build Unsigned APK
- task: MSBuild@1
  displayName: 'Build Unsigned APK'
  inputs:
    solution: '**/Location.Core.csproj'
    msbuildArguments: '/p:Configuration=$(BuildConfiguration) /p:AndroidPackageFormat=apk'
    configuration: '$(BuildConfiguration)'

# Step 5: Download Keystore File
- task: DownloadSecureFile@1
  displayName: 'Download Keystore File'
  inputs:
    secureFile: 'pixmap-release.keystore'

# Step 6: Sign APK
- script: |
    jarsigner -verbose -keystore $(Agent.TempDirectory)/pixmap-release.keystore -storepass $(KeystorePassword) -keypass $(KeyPassword) -signedjar $(Build.ArtifactStagingDirectory)/LocationCore-$(Build.BuildId).apk $(Build.SourcesDirectory)/bin/$(BuildConfiguration)/net9.0-android/app-release-unsigned.apk $(KeyAlias)
  displayName: 'Sign APK'
  env:
    KeystorePassword: $(KeystorePassword)
    KeyAlias: $(KeyAlias)
    KeyPassword: $(KeyPassword)

# Step 7: Publish Signed APK to Azure Artifacts
- task: UniversalPackages@0
  displayName: 'Publish Signed APK to Azure Artifacts'
  inputs:
    command: 'publish'
    publishDirectory: '$(Build.ArtifactStagingDirectory)'
    feedsToUse: 'select'
    feedPublish: 'apk'
    packagePublish: 'LocationCore-APK'
    versionPublish: '1.0.0'



